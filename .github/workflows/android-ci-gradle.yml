name: Build and Sign APK and AAB

on:
  push:
    branches:
      - main

env:
  ANDROID_BUILD_TOOLS_VERSION: "34.0.0"
  ANDROID_COMPILE_SDK: 34
  PATH_UNSIGNED: "app/build/outputs"
  ANDROID_TARGET_SDK: 34
  CMD_TOOLS_VERSION: "10406996" # Change this to the desired version

jobs:
  build_and_sign:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Android SDK
      run: |
        mkdir -p $ANDROID_HOME
        wget https://dl.google.com/android/repository/commandlinetools-linux-${CMD_TOOLS_VERSION}_latest.zip -O android_sdk.zip
        unzip -qq android_sdk.zip -d $ANDROID_HOME
        rm android_sdk.zip
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin

    - name: Accept SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
    
    - name: Update and Install SDK components
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update --sdk_root=$ANDROID_HOME
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "tools" "platforms;android-${ANDROID_COMPILE_SDK}" "build-tools;${ANDROID_BUILD_TOOLS_VERSION}" --sdk_root=$ANDROID_HOME
    
    - name: Build unsigned APK and AAB
      run: |
        chmod +x ./gradlew
        ./gradlew assembleRelease bundleRelease


    - name: Decode Keystore
      env:
        ENCODED_KEYSTORE: "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"
        DECODED_KEYSTORE_PATH: keystore.jks
      run: |
        echo "$ENCODED_KEYSTORE" | base64 -d > $DECODED_KEYSTORE_PATH
        cat $DECODED_KEYSTORE_PATH

          
    - name: Debug Keystore
      run: |
        ls -l keystore.jks
        tail keystore.jks
        wc -l keystore.jks
    
    - name: Verify Decoded Keystore
      env:
        KEYSTOREPASSWORD: ${{ secrets.KEYSTOREPASSWORD }}
      run: keytool -list -v -keystore keystore.jks -storepass "${KEYSTOREPASSWORD}"
    
    
    - name: Sign APK and AAB
      run: |
        # Decode the Android signing key and save it as keystore.jks
        #echo "${{ secrets.ANDROID_SIGNING_KEY }}" | base64 -d > keystore.jks

        # Verify the keystore using keytool
        #keytool -list -v -keystore keystore.jks -storepass "${{ secrets.KEYSTOREPASSWORD }}"

        # Sign the Release APK using apksigner from Android Build Tools
        "${ANDROID_HOME}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/apksigner" sign --ks $(pwd)/keystore.jks --ks-key-alias ${{ secrets.ALIAS }} --ks-pass pass:${{ secrets.KEYSTOREPASSWORD }}  --in $(pwd)/${{ env.PATH_UNSIGNED }}/apk/release/app-release-unsigned.apk --out $(pwd)/${{ env.PATH_UNSIGNED }}/apk/release/app-release-signed.apk 
        
        # Verify the signed Release APK
        "${ANDROID_HOME}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/apksigner" verify --verbose $(pwd)/${{ env.PATH_UNSIGNED }}/apk/release/app-release-signed.apk

        # Sign the AAB using bundletool
        "${ANDROID_HOME}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/bundletool" build-bundle --modules=$(pwd)/${{ env.PATH_UNSIGNED }}/bundle/release/app-release.aab --output=$(pwd)/${{ env.PATH_UNSIGNED }}/bundle/release/signed_app_bundle.aab --ks $(pwd)/keystore.jks --ks-pass pass:${{ secrets.KEYSTOREPASSWORD }} --ks-key-alias ${{ secrets.ALIAS }} --key-pass pass:${{ secrets.KEYPASSWORD }}
        
        # Verify the signed AAB
        "${ANDROID_HOME}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/bundletool" validate --bundle $(pwd)/${{ env.PATH_UNSIGNED }}/bundle/release/signed_app_bundle.aab
