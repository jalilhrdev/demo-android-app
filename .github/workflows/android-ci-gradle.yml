name: Android CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
env:
  ANDROID_BUILD_TOOLS_VERSION: "34.0.0"
  ANDROID_COMPILE_SDK: 34
  ANDROID_TARGET_SDK: 34

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -e {0}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permissions for gradlew
        run: chmod +x ./gradlew

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          sdk-version: "${{ env.ANDROID_BUILD_TOOLS_VERSION }}"

      - name: Print Gradle version
        run: ./gradlew -v

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Print Gradle Output Location
        run: |
          echo "Gradle output location: $(pwd)/app/build/outputs/apk/release/"

      - name: Check APK File Existence
        run: |
          if [ ! -f "$(pwd)/app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            echo "Error: App Bundle file not found!"
            exit 1
          fi

      - name: Install Android Build Tools
        run: sdkmanager "build-tools;${ANDROID_BUILD_TOOLS_VERSION}"

      - name: Sign APK
        run: |
          # Decode the Android signing key and save it as keystore.jks
          echo "${{ secrets.ANDROID_SIGNING_KEY }}" | base64 -d > keystore.jks
          
          # Sign the Release APK using apksigner from Android Build Tools
          "${ANDROID_HOME}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/apksigner" sign --ks keystore.jks --ks-key-alias ${{ secrets.ALIAS }} --ks-pass pass:${{ secrets.KEYSTOREPASSWORD }} "$(pwd)/app/build/outputs/apk/release/app-release-unsigned.apk"
          
          # Verify the signed Release APK
          #"${ANDROID_HOME}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/apksigner" verify --verbose "$(pwd)/app/build/outputs/apk/release/app-release-signed.apk"

      - name: Check Signed APK File Existence
        run: |
          if [ ! -f "$(pwd)/app/build/outputs/apk/release/app-release-signed.apk" ]; then
            echo "Error: Signed APK file not found!"
            exit 1
          fi

      - name: Print Secret Variables for Debugging
        run: |
          echo "KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTOREPASSWORD }}"
          echo "KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYPASSWORD }}"

      - name: Upload App Bundle and Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts
          path: |
            app/build/outputs/apk/release/app-release-signed.apk
