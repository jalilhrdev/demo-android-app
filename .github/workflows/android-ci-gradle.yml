name: Build and Sign APK and AAB

on:
  push:
    branches:
      - main

env:
  ANDROID_BUILD_TOOLS_VERSION: "34.0.0"
  ANDROID_COMPILE_SDK: 34
  PATH_UNSIGNED: "app/build/outputs"
  ANDROID_TARGET_SDK: 34
  CMD_TOOLS_VERSION: "10406996" # Change this to the desired version

jobs:
  build_and_sign:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Android SDK
      run: |
        mkdir -p $ANDROID_HOME
        wget https://dl.google.com/android/repository/commandlinetools-linux-${CMD_TOOLS_VERSION}_latest.zip -O android_sdk.zip
        unzip -qq android_sdk.zip -d $ANDROID_HOME
        rm android_sdk.zip
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin

    - name: Accept SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
    
    - name: Update and Install SDK components
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update --sdk_root=$ANDROID_HOME
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "tools" "platforms;android-${ANDROID_COMPILE_SDK}" "build-tools;${ANDROID_BUILD_TOOLS_VERSION}" --sdk_root=$ANDROID_HOME
    
    - name: Build unsigned APK and AAB
      run: |
        chmod +x ./gradlew
        ./gradlew assembleRelease bundleRelease


    - name: Decode Keystore
      env:
        ENCODED_KEYSTORE: ${{ secrets.ANDROID_SIGNING_KEY }}
        DECODED_KEYSTORE_PATH: keystore.jks
      run: |
        echo $ENCODED_KEYSTORE | base64 -d > $DECODED_KEYSTORE_PATH
    
    - name: Debug Keystore
      run: |
        ls -l keystore.jks
        tail keystore.jks
        wc -l keystore.jks
    
    - name: Verify Decoded Keystore
      run: keytool -list -v -keystore keystore.jks -storepass "${{ secrets.KEYSTOREPASSWORD }}"
    
      
    - name: Sign APK and AAB
      run: |
        # Decode the Android signing key and save it as keystore.jks
        #echo "${{ secrets.ANDROID_SIGNING_KEY }}" | base64 -d > keystore.jks

        # Verify the keystore using keytool
        #keytool -list -v -keystore keystore.jks -storepass "${{ secrets.KEYSTOREPASSWORD }}"

        # Sign the Release APK using apksigner from Android Build Tools
        "${ANDROID_HOME}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/apksigner" sign --ks $(pwd)/keystore.jks --ks-key-alias ${{ secrets.ALIAS }} --ks-pass pass:${{ secrets.KEYSTOREPASSWORD }}  --in $(pwd)/${{ env.PATH_UNSIGNED }}/apk/release/app-release-unsigned.apk --out $(pwd)/${{ env.PATH_UNSIGNED }}/apk/release/app-release-signed.apk 
        
        # Verify the signed Release APK
        "${ANDROID_HOME}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/apksigner" verify --verbose $(pwd)/${{ env.PATH_UNSIGNED }}/apk/release/app-release-signed.apk

        # Sign the AAB using bundletool
        "${ANDROID_HOME}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/bundletool" build-bundle --modules=$(pwd)/${{ env.PATH_UNSIGNED }}/bundle/release/app-release.aab --output=$(pwd)/${{ env.PATH_UNSIGNED }}/bundle/release/signed_app_bundle.aab --ks $(pwd)/keystore.jks --ks-pass pass:${{ secrets.KEYSTOREPASSWORD }} --ks-key-alias ${{ secrets.ALIAS }} --key-pass pass:${{ secrets.KEYPASSWORD }}
        
        # Verify the signed AAB
        "${ANDROID_HOME}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/bundletool" validate --bundle $(pwd)/${{ env.PATH_UNSIGNED }}/bundle/release/signed_app_bundle.aab
